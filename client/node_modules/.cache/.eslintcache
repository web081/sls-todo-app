[{"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/index.tsx":"1","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/serviceWorker.ts":"2","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/routing.tsx":"3","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/auth/Auth.js":"4","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/App.tsx":"5","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/Callback.tsx":"6","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/config.ts":"7","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/EditTodo.tsx":"8","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/LogIn.tsx":"9","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/Todos.tsx":"10","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/NotFound.tsx":"11","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/api/todos-api.ts":"12"},{"size":518,"mtime":1658853074883,"results":"13","hashOfConfig":"14"},{"size":5201,"mtime":1658853074884,"results":"15","hashOfConfig":"14"},{"size":884,"mtime":1658853074884,"results":"16","hashOfConfig":"14"},{"size":2768,"mtime":1658853074880,"results":"17","hashOfConfig":"14"},{"size":2472,"mtime":1658853074880,"results":"18","hashOfConfig":"14"},{"size":211,"mtime":1658853074881,"results":"19","hashOfConfig":"14"},{"size":279,"mtime":1658853933873,"results":"20","hashOfConfig":"14"},{"size":2382,"mtime":1658853074881,"results":"21","hashOfConfig":"14"},{"size":493,"mtime":1658853074882,"results":"22","hashOfConfig":"14"},{"size":5145,"mtime":1658853074882,"results":"23","hashOfConfig":"14"},{"size":221,"mtime":1658853074882,"results":"24","hashOfConfig":"14"},{"size":2107,"mtime":1658853074880,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"1ppnesx",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/index.tsx",["52"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeAuthRouting } from './routing';\n\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/serviceWorker.ts",[],"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/routing.tsx",[],"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/auth/Auth.js",[],"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/App.tsx",[],"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/Callback.tsx",[],"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/config.ts",[],"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/EditTodo.tsx",[],"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/LogIn.tsx",[],"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/Todos.tsx",["53"],"import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createTodo, deleteTodo, getTodos, patchTodo } from '../api/todos-api'\nimport Auth from '../auth/Auth'\nimport { Todo } from '../types/Todo'\n\ninterface TodosProps {\n  auth: Auth\n  history: History\n}\n\ninterface TodosState {\n  todos: Todo[]\n  newTodoName: string\n  loadingTodos: boolean\n}\n\nexport class Todos extends React.PureComponent<TodosProps, TodosState> {\n  state: TodosState = {\n    todos: [],\n    newTodoName: '',\n    loadingTodos: true\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newTodoName: event.target.value })\n  }\n\n  onEditButtonClick = (todoId: string) => {\n    this.props.history.push(`/todos/${todoId}/edit`)\n  }\n\n  onTodoCreate = async (event: React.ChangeEvent<HTMLButtonElement>) => {\n    try {\n      const dueDate = this.calculateDueDate()\n      const newTodo = await createTodo(this.props.auth.getIdToken(), {\n        name: this.state.newTodoName,\n        dueDate\n      })\n      this.setState({\n        todos: [...this.state.todos, newTodo],\n        newTodoName: ''\n      })\n    } catch {\n      alert('Todo creation failed')\n    }\n  }\n\n  onTodoDelete = async (todoId: string) => {\n    try {\n      await deleteTodo(this.props.auth.getIdToken(), todoId)\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.todoId != todoId)\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  onTodoCheck = async (pos: number) => {\n    try {\n      const todo = this.state.todos[pos]\n      await patchTodo(this.props.auth.getIdToken(), todo.todoId, {\n        name: todo.name,\n        dueDate: todo.dueDate,\n        done: !todo.done\n      })\n      this.setState({\n        todos: update(this.state.todos, {\n          [pos]: { done: { $set: !todo.done } }\n        })\n      })\n    } catch {\n      alert('Todo update failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const todos = await getTodos(this.props.auth.getIdToken())\n      this.setState({\n        todos,\n        loadingTodos: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch todos: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h1\">TODOs</Header>\n\n        {this.renderCreateTodoInput()}\n\n        {this.renderTodos()}\n      </div>\n    )\n  }\n\n  renderCreateTodoInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <Input\n            action={{\n              color: 'teal',\n              labelPosition: 'left',\n              icon: 'add',\n              content: 'New task',\n              onClick: this.onTodoCreate\n            }}\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"To change the world...\"\n            onChange={this.handleNameChange}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderTodos() {\n    if (this.state.loadingTodos) {\n      return this.renderLoading()\n    }\n\n    return this.renderTodosList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading TODOs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderTodosList() {\n    return (\n      <Grid padded>\n        {this.state.todos.map((todo, pos) => {\n          return (\n            <Grid.Row key={todo.todoId}>\n              <Grid.Column width={1} verticalAlign=\"middle\">\n                <Checkbox\n                  onChange={() => this.onTodoCheck(pos)}\n                  checked={todo.done}\n                />\n              </Grid.Column>\n              <Grid.Column width={10} verticalAlign=\"middle\">\n                {todo.name}\n              </Grid.Column>\n              <Grid.Column width={3} floated=\"right\">\n                {todo.dueDate}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"blue\"\n                  onClick={() => this.onEditButtonClick(todo.todoId)}\n                >\n                  <Icon name=\"pencil\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onTodoDelete(todo.todoId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              {todo.attachmentUrl && (\n                <Image src={todo.attachmentUrl} size=\"small\" wrapped />\n              )}\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n  calculateDueDate(): string {\n    const date = new Date()\n    date.setDate(date.getDate() + 7)\n\n    return dateFormat(date, 'yyyy-mm-dd') as string\n  }\n}\n","/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/components/NotFound.tsx",[],"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/api/todos-api.ts",[],{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":67,"column":60,"nodeType":"60","messageId":"61","endLine":67,"endColumn":62},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]