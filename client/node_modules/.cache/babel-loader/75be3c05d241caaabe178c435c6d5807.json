{"ast":null,"code":"import _classCallCheck from \"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport auth0 from 'auth0-js';\nimport { authConfig } from '../config';\n\nvar Auth = /*#__PURE__*/function () {\n  function Auth(history) {\n    _classCallCheck(this, Auth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: authConfig.domain,\n      clientID: authConfig.clientId,\n      redirectUri: authConfig.callbackUrl,\n      responseType: 'token id_token',\n      scope: 'openid'\n    });\n    this.history = history;\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this = this;\n\n      this.auth0.parseHash(function (err, authResult) {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          console.log('Access token: ', authResult.accessToken);\n          console.log('id token: ', authResult.idToken);\n\n          _this.setSession(authResult);\n        } else if (err) {\n          _this.history.replace('/');\n\n          console.log(err);\n          alert(\"Error: \".concat(err.error, \". Check the console for further details.\"));\n        }\n      });\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      return this.accessToken;\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      return this.idToken;\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      // Set isLoggedIn flag in localStorage\n      localStorage.setItem('isLoggedIn', 'true'); // Set the time that the access token will expire at\n\n      var expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\n      this.accessToken = authResult.accessToken;\n      this.idToken = authResult.idToken;\n      this.expiresAt = expiresAt; // navigate to the home route\n\n      this.history.replace('/');\n    }\n  }, {\n    key: \"renewSession\",\n    value: function renewSession() {\n      var _this2 = this;\n\n      this.auth0.checkSession({}, function (err, authResult) {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          _this2.setSession(authResult);\n        } else if (err) {\n          _this2.logout();\n\n          console.log(err);\n          alert(\"Could not get a new token (\".concat(err.error, \": \").concat(err.error_description, \").\"));\n        }\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // Remove tokens and expiry time\n      this.accessToken = null;\n      this.idToken = null;\n      this.expiresAt = 0; // Remove isLoggedIn flag from localStorage\n\n      localStorage.removeItem('isLoggedIn');\n      this.auth0.logout({\n        return_to: window.location.origin\n      }); // navigate to the home route\n\n      this.history.replace('/');\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the\n      // access token's expiry time\n      var expiresAt = this.expiresAt;\n      return new Date().getTime() < expiresAt;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport { Auth as default };","map":{"version":3,"names":["auth0","authConfig","Auth","history","WebAuth","domain","clientID","clientId","redirectUri","callbackUrl","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","parseHash","err","authResult","accessToken","idToken","console","log","setSession","replace","alert","error","localStorage","setItem","expiresAt","expiresIn","Date","getTime","checkSession","error_description","removeItem","return_to","window","location","origin"],"sources":["/Users/mac/udacity/cloud-developer /course-04/project/sls-todo-app/client/src/auth/Auth.js"],"sourcesContent":["import auth0 from 'auth0-js';\nimport { authConfig } from '../config';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: authConfig.domain,\n    clientID: authConfig.clientId,\n    redirectUri: authConfig.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor(history) {\n    this.history = history\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        console.log('Access token: ', authResult.accessToken)\n        console.log('id token: ', authResult.idToken)\n        this.setSession(authResult);\n      } else if (err) {\n        this.history.replace('/');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}